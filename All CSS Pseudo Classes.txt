list-style-type:- Enables you to control the shape or appearance of the marker. (The
marker is another name for the bullet point or number.)
=>valu     Marker
-------------------------------------------
none:-     None
disc:-     Filled-in circle (default)
circle:-   Empty circle
square:-   Filled-in square

list-style-position:- When a list item takes up more than one line, this property specifies
where the marker should appear in relation to the text.
Value         Purpose
-------------------------
inside         The marker is inside the block of text (which is indented).

outside        The marker sits to the left of the block of text. (This is the default value if
       this is
               not specified.)



list-style-image: Specifies an image for the marker rather than a bullet point or number.

list-style:- Serves as shorthand for the preceding properties.

marker-offset:- Specifies the distance between a marker and the text in the list.


     GENERATED
=======================
What are Pseudo-classes?

=> A pseudo-class is used to define a special state of an element



The :before and :after pseudo-elements enable you to add text before or after each instance of
an element defined in a selector. For example, the following CSS rule adds the words “You need 
to
register to read the full article” after each instance of a <p> element that carries the class 
attribute whose value is abstract






All CSS Pseudo Classes

Selector	        Example	                       Example description

:active	           a:active	                  Selects the active link

:checked		   input:checked	          Selects every checked <input> element

:disabled		   input:disabled	          Selects every disabled <input> element

:empty	    	   p:empty	                  Selects every <p> element that has no children

:enabled	      input:enabled	              Selects every enabled <input> element

:first-child	  p:first-child				  Selects every <p> elements that is the first child 
                                              of its parent
											  
:first-of-type	  p:first-of-type			  Selects every <p> element that is the first <p> 
											  element of its parent
											  
:focus	          input:focus				  Selects the <input> element that has focus

:hover			  a:hover					  Selects links on mouse over

:in-range		  input:in-range			  Selects <input> elements with a value within 
											  a specified range
											  
:invalid	      input:invalid	              Selects all <input> elements with an invalid value
		
:lang(language)	  p:lang(it)				  Selects every <p> element with a lang attribute 
											  value starting with "it"
											  
:last-child   	  p:last-child				  Selects every <p> elements that is the last child 
											  of its parent
											  
:last-of-type	  p:last-of-type			  Selects every <p> element that is the last <p> 
											  element of its parent
											  
:link	               a:link				Selects all unvisited links

:not(selector)	      :not(p)				Selects every element that is not a <p> element

:nth-child(n)	      p:nth-child(2)		Selects every <p> element that is the second child 
											of its parent
											
:nth-last-child(n)	  p:nth-last-child(2)	Selects every <p> element that is the second child of 
											its parent, counting from the last child
											
:nth-last-of-type(n)  p:nth-last-of-type(2)	Selects every <p> element that is the second <p> 
											element of its parent, counting from the last child
											
:nth-of-type(n)	      p:nth-of-type(2)		Selects every <p> element that is the second <p> 
											element of its parent
											
:only-of-type	      p:only-of-type		Selects every <p> element that is the only <p> 
											element of its parent
											
:only-child	          p:only-child			Selects every <p> element that is the only child of 
											its parent
											
:optional	          input:optional		Selects <input> elements with no "required" attribute
	
:out-of-range	      input:out-of-range	Selects <input> elements with a value outside a 
											specified range
											
:read-only	          input:read-only		Selects <input> elements with a "readonly" attribute 
											specified
											
:read-write	          input:read-write		Selects <input> elements with no "readonly" attribute
		
:required	          input:required		Selects <input> elements with a "required" attribute 
											specified
											  
:root				  root					Selects the document's root element

:target				  #news:target			Selects the current active #news element 
											(clicked on a URL containing that anchor name)
											
:valid				  input:valid			Selects all <input> elements with a valid value

:visited			  a:visited				Selects all visited links											  



























